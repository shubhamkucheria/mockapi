    How do you find the missing number in a given integer array of 1 to 100?
    
    How do you find the duplicate number on a given integer array?
    ans: 
    var s = [1, 2, 3, 4, 2, 2, 4, 1, 5, 6];
console.log(s);
var s2 = s.sort();
console.log(s2);
var s1 = s2.filter((o, i) => o === s[i + 1]);
console.log(s1);
var ab = [...new Set(s1)];
console.log(ab);


    
    How do you find the largest and smallest number in an unsorted integer array?
    var s = [1, 2, 3, 4, 2, 2, 4, 1, 5, 6];
console.log(s);
var s2 = s.sort();
console.log(s2);
var [min,max] = [s2[0],s2[s.length -1]];
console.log(min,max);


    
    How do you find all pairs of an integer array whose sum is equal to a given number?
    
    How do you find duplicate numbers in an array if it contains multiple duplicates?
    
    How are duplicates removed from a given array in JS?
    var s = [1, 2, 3, 4, 2, 2, 4, 1, 5, 6];
var s1 = [...new Set(s)];
console.log(s1);


    
    How is an integer array sorted in place using the quicksort algorithm?
    
    How do you remove duplicates from an array in place?
    
    
    How do you reverse an array in place in JS?
    var s = [1, 2, 3, 4, 2, 2, 4, 1, 5, 6];
var s1 = s.reverse();
console.log(s1);

    
    How are duplicates removed from an array without using any library?
    
    How do you find the middle element of a singly linked list in one pass?
    How do you check if a given linked list contains a cycle? How do you find the starting node of the cycle?
    How do you reverse a linked list?
    How do you reverse a singly linked list without recursion?
    How are duplicate nodes removed in an unsorted linked list?
    How do you find the length of a singly linked list?
    How do you find the third node from the end in a singly linked list?
    How do you find the sum of two linked lists using Stack?
    
    
